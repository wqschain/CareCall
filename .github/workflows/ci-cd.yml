name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install Python dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Install Node.js dependencies
      run: |
        cd frontend
        npm install
        
    - name: Run backend tests
      run: |
        cd backend
        pytest
        
    - name: Run frontend tests
      run: |
        cd frontend
        npm run test
        
    - name: Run linters
      run: |
        cd backend
        pip install flake8
        flake8 .
        cd ../frontend
        npm run lint

  deploy-backend:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        
    - name: Build and push Docker image
      run: |
        cd backend
        gcloud builds submit --tag gcr.io/${{ secrets.GCP_PROJECT_ID }}/carecall-backend
        
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy carecall-backend \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/carecall-backend \
          --platform managed \
          --region ${{ secrets.GCP_REGION }} \
          --allow-unauthenticated

  deploy-frontend:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend 